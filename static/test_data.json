{"messages":"   Compiling rustw v0.1.0 (file:///home/ncameron/rustw)\n","errors":[{"message":"cannot borrow `<code class=\"code\">res</code>` as mutable more than once at a time","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"src/server.rs","byte_start":16593,"byte_end":16596,"line_start":71,"line_end":71,"column_start":22,"column_end":25,"text":["                    *<span class=\"src_highlight\">res</span>.status_mut() = status;"]}],"children":[{"message":"previous borrow of `<code class=\"code\">res</code>` occurs here; the mutable borrow prevents subsequent moves, borrows, or modification of `<code class=\"code\">res</code>` until the borrow ends","code":null,"level":"note","spans":[{"file_name":"src/server.rs","byte_start":16468,"byte_end":16471,"line_start":67,"line_end":67,"column_start":35,"column_end":38,"text":["                    let r2 = &mut <span class=\"src_highlight\">res</span>;"]}],"children":[]},{"message":"previous borrow ends here","code":null,"level":"note","spans":[{"file_name":"src/server.rs","byte_start":16432,"byte_end":16692,"line_start":73,"line_end":73,"column_start":17,"column_end":18,"text":["                router::Action::Error(status, ref msg) => <span class=\"src_highlight\">{</span>","<span class=\"src_highlight\">                    let r2 = &mut res;</span>","<span class=\"src_highlight\">                    // TODO log it</span>","<span class=\"src_highlight\">                    //println!(\"ERROR: {} ({})\", msg, status);</span>","","<span class=\"src_highlight\">                    *res.status_mut() = status;</span>","<span class=\"src_highlight\">                    res.send(msg.as_bytes()).unwrap();</span>","<span class=\"src_highlight\">                }</span>"]}],"children":[]}]},{"message":"cannot move out of `<code class=\"code\">res</code>` because it is borrowed","code":{"code":"E0505","explanation":null},"level":"error","spans":[{"file_name":"src/server.rs","byte_start":16640,"byte_end":16643,"line_start":72,"line_end":72,"column_start":21,"column_end":24,"text":["                    <span class=\"src_highlight\">res</span>.send(msg.as_bytes()).unwrap();"]}],"children":[{"message":"borrow of `<code class=\"code\">res</code>` occurs here","code":null,"level":"note","spans":[{"file_name":"src/server.rs","byte_start":16468,"byte_end":16471,"line_start":67,"line_end":67,"column_start":35,"column_end":38,"text":["                    let r2 = &mut <span class=\"src_highlight\">res</span>;"]}],"children":[]}]},{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[]}]}
